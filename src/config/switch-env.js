/**
 * Script para trocar entre ambientes de desenvolvimento e produ√ß√£o
 * Uso: node switch-env.js [development|production]
 */

const fs = require('fs');
const path = require('path');

// Fun√ß√£o para ler o arquivo index.html
function readIndexHtml() {
  const indexPath = path.join(__dirname, 'index.html');
  return fs.readFileSync(indexPath, 'utf8');
}

// Fun√ß√£o para escrever o arquivo index.html
function writeIndexHtml(content) {
  const indexPath = path.join(__dirname, 'index.html');
  fs.writeFileSync(indexPath, content, 'utf8');
}

// Fun√ß√£o para trocar o ambiente
function switchEnvironment(environment) {
  const validEnvironments = ['development', 'production'];
  
  if (!validEnvironments.includes(environment)) {
    console.error('‚ùå Ambiente inv√°lido. Use: development ou production');
    process.exit(1);
  }

  console.log(`üîÑ Trocando para ambiente: ${environment}`);

  let content = readIndexHtml();
  
  if (environment === 'development') {
    // Ativa desenvolvimento, desativa produ√ß√£o
    content = content.replace(
      /<!-- Desenvolvimento -->\s*<!-- <script src="\/env\.development\.js"><\/script> -->/,
      '<!-- Desenvolvimento -->\n  <script src="/env.development.js"></script>'
    );
    content = content.replace(
      /<!-- Produ√ß√£o -->\s*<script src="\/env\.production\.js"><\/script>/,
      '<!-- Produ√ß√£o -->\n  <!-- <script src="/env.production.js"></script> -->'
    );
  } else {
    // Ativa produ√ß√£o, desativa desenvolvimento
    content = content.replace(
      /<!-- Desenvolvimento -->\s*<script src="\/env\.development\.js"><\/script>/,
      '<!-- Desenvolvimento -->\n  <!-- <script src="/env.development.js"></script> -->'
    );
    content = content.replace(
      /<!-- Produ√ß√£o -->\s*<!-- <script src="\/env\.production\.js"><\/script> -->/,
      '<!-- Produ√ß√£o -->\n  <script src="/env.production.js"></script>'
    );
  }

  writeIndexHtml(content);
  
  console.log(`‚úÖ Ambiente alterado para: ${environment}`);
  console.log(`üìù Arquivo index.html atualizado`);
  
  // Mostra informa√ß√µes do ambiente
  if (environment === 'development') {
    console.log('\nüîß Configura√ß√µes de Desenvolvimento:');
    console.log('   - API URL: http://localhost:3003');
    console.log('   - Debug: habilitado');
    console.log('   - Logs: detalhados');
    console.log('   - Cache: reduzido');
  } else {
    console.log('\nüöÄ Configura√ß√µes de Produ√ß√£o:');
    console.log('   - API URL: https://api.msoft.com.br');
    console.log('   - Debug: desabilitado');
    console.log('   - Logs: apenas erros');
    console.log('   - Cache: otimizado');
    console.log('   ‚ö†Ô∏è  Lembre-se de configurar os tokens reais em env.production.js');
  }
}

// Fun√ß√£o para mostrar o ambiente atual
function showCurrentEnvironment() {
  const content = readIndexHtml();
  
  if (content.includes('<script src="/env.development.js"></script>')) {
    console.log('üîß Ambiente atual: DESENVOLVIMENTO');
  } else if (content.includes('<script src="/env.production.js"></script>')) {
    console.log('üöÄ Ambiente atual: PRODU√á√ÉO');
  } else {
    console.log('‚ùì Ambiente n√£o detectado');
  }
}

// Fun√ß√£o principal
function main() {
  const args = process.argv.slice(2);
  
  if (args.length === 0) {
    console.log('üìã Uso: node switch-env.js [development|production|status]');
    console.log('');
    console.log('Comandos dispon√≠veis:');
    console.log('  development  - Ativa ambiente de desenvolvimento');
    console.log('  production   - Ativa ambiente de produ√ß√£o');
    console.log('  status       - Mostra o ambiente atual');
    console.log('');
    showCurrentEnvironment();
    return;
  }

  const command = args[0].toLowerCase();
  
  switch (command) {
    case 'development':
    case 'dev':
      switchEnvironment('development');
      break;
    case 'production':
    case 'prod':
      switchEnvironment('production');
      break;
    case 'status':
      showCurrentEnvironment();
      break;
    default:
      console.error('‚ùå Comando inv√°lido. Use: development, production ou status');
      process.exit(1);
  }
}

// Executa o script
if (require.main === module) {
  main();
}

module.exports = { switchEnvironment, showCurrentEnvironment }; 